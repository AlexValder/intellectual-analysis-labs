from typing import List
from math import inf


def get_f(k1: int, k2: int) -> float:
    if k1 not in __k1:
        raise RuntimeError(f"k1 is out of range: {k1}")
    if k2 not in __k2:
        raise RuntimeError(f"k2 is out of range: {k2}")

    return __table[__k2.index(k2)][__k1.index(k1)]


__k1: List[int] = [i for i in range(1, 10)]
__k2: List[int] = [i for i in range(1, 29)] + [30, 40, 60, 120]

__table: List[List[float]] = [
    #  1       2       3       4       5       6       7       8       9
    [161.45, 199.50, 215.71, 224.58, 230.16, 233.99, 236.77, 238.88, 240.54], # k2 = 1
    [18.513, 19.000, 19.164, 19.247, 19.296, 19.330, 19.353, 19.371, 19.385], # k2 = 2
    [10.128, 9.5521, 9.2766, 9.1172, 9.0135, 8.9406, 8.8868, 8.8452, 8.8123], # k2 = 3
    [7.7086, 6.9443, 6.5914, 6.3883, 6.2560, 6.1631, 6.0942, 6.0410, 5.9988], # k2 = 4
    [6.6079, 5.7861, 5.4095, 5.1922, 5.0503, 4.9503, 4.8759, 4.8183, 4.7725], # k2 = 5
    [5.9874, 5.1433, 4.7571, 4.5337, 4.3874, 4.2839, 4.2066, 4.1468, 4.0990], # k2 = 6
    [5.5914, 4.7374, 4.3468, 4.1203, 3.9715, 3.8660, 3.7870, 3.7257, 3.6767], # k2 = 7
    [5.3177, 4.4590, 4.0662, 3.8378, 3.6875, 3.5806, 3.5005, 3.4381, 3.3881], # k2 = 8
    [5,1174, 4.2565, 3.8626, 3.6331, 3.4817, 3.3738, 3.2927, 3.2296, 3.1789], # k2 = 9
    [4.9646, 4.1028, 3.7083, 3.4780, 3.3258, 3.2172, 3.1355, 3.0717, 3.0204], # k2 = 10
    [4.8443, 3.9823, 3.5874, 3.3567, 3.2039, 3.0946, 3.0123, 2.9480, 2.8962], # k2 = 11
    [4.7472, 3.8853, 3.4903, 3.2592, 3.1059, 2.9961, 2.9134, 2.8486, 2.7964], # k2 = 12
    [4.6672, 3.8056, 3.4105, 3.1791, 3.0254, 2.9153, 2.8321, 2.7669, 2.7144], # k2 = 13
    [4.6001, 3.7389, 3.3439, 3.1122, 2.9582, 2.8477, 2.7642, 2.6987, 2.6458], # k2 = 14
    [4.5431, 3.6823, 3.2874, 3.9013, 3.0566, 2.7905, 2.7066, 2.6408, 2.5876], # k2 = 15
    [4.4940, 3.6337, 3.2389, 3.0069, 2.8524, 2.7413, 2.6572, 2.5911, 2.5377], # k2 = 16
    [4.4513, 3.5915, 3.1968, 2.9647, 2.8100, 2.6987, 2.6143, 2.5480, 2.4943], # k2 = 17
    [4.4139, 3.5546, 3.1599, 2.9277, 2.7729, 2.6613, 2.5767, 2.5102, 2.4563], # k2 = 18
    [4.3808, 3.5219, 3.1274, 2.8951, 2.7401, 2.6283, 2.5435, 2.4768, 2.4227], # k2 = 19
    [4.3513, 3.4928, 3.0984, 2.8661, 2.7109, 2.5990, 2.5140, 2.4471, 2.3928], # k2 = 20
    [4.3248, 3.4668, 3.0725, 2.8401, 2.6848, 2.5727, 2.4876, 2.4204, 2.3661], # k2 = 21
    [4.3009, 3.5219, 3.1274, 2.8951, 2.7401, 2.6283, 2.5435, 2.4768, 2.4227], # k2 = 22
    [4.2793, 3.4221, 3.0280, 2.7955, 2.6400, 2.5277, 2.4422, 2.3748, 2.3201], # k2 = 23
    [4.2597, 3.4028, 3.0088, 2.7763, 2.6207, 2.5082, 2.4226, 2.3551, 2.3002], # k2 = 24
    [4.2417, 3.3852, 2.9912, 2.7587, 2.6030, 2.4904, 2.4047, 2.3371, 2.2821], # k2 = 25
    [4.2252, 3.3690, 2.9751, 2.7426, 2.5868, 2.4741, 2.3883, 2.3205, 2.2655], # k2 = 26
    [4.2100, 3.3541, 2.9604, 2.7278, 2.5719, 2.4591, 2.3732, 2.3053, 2.2501], # k2 = 27
    [4.1960, 3.3404, 2.9467, 2.7141, 2.5581, 2.4453, 2.3593, 2.2913, 2.2360], # k2 = 28
    [4.1709, 3.3158, 2.9223, 2.6896, 2.5336, 2.4205, 2.3343, 2.2662, 2.2107], # k2 = 30
    [4.0848, 3.2317, 2.8387, 2.6060, 2.4495, 2.3359, 2.2490, 2.1802, 2.1240], # k2 = 40
    [4.0012, 3.1504, 2.7581, 2.5252, 2.3683, 2.2540, 2.1665, 2.0970, 2.0401], # k2 = 60
    [3.9201, 3.0718, 2.6802, 2.4472, 2.2900, 2.1750, 2.0867, 2.0164, 1.9588], # k2 = 120
    [3.8415, 2.9957, 2.6049, 2.3719, 2.2141, 2.0986, 2.0096, 1.9384, 1.8799], # k2 = âˆž
]